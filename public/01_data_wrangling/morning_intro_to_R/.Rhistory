facet_wrap(~variable, nrow = 2)
dat <- inner_join(wemwbs, screen2, "Serial")
dat_means <- dat %>%
group_by(variable, day, hours) %>%
summarise(mean_wellbeing = mean(wellbeing))
dat <- inner_join(wemwbs, screen2, "Serial")
dat
dat_means <- dat %>%
group_by(variable, day, hours) %>%
summarise(mean_wellbeing = mean(tot_wellbeing))
dat_means
smart_wb
knitr::opts_chunk$set(echo = TRUE)
if (!requireNamespace("webex")) {
stop("You must have the 'webex' package installed to knit HTML from this template.\n   devtools::install_github(\"dalejbarr/webex\")")
} else {
library("webex")
}
library("tidyverse")
pinfo <- read_csv("participant_info.csv")
wellbeing <- read_csv("wellbeing.csv")
screen <- read_csv("screen_time.csv")
wemwbs <- wellbeing %>%
gather("var", "score", -Serial) %>%
group_by(Serial) %>%
summarise(tot_wellbeing = sum(score))
wemwbs %>% summarise(mean = mean(tot_wellbeing),
sd = sd(tot_wellbeing),
min = min(tot_wellbeing),
max = max(tot_wellbeing))
ggplot(wemwbs, aes(tot_wellbeing)) + geom_histogram()
screen_long <- screen %>%
gather("var", "hours", -Serial) %>%
separate(var, c("variable", "day"), "_")
screen2 <- screen_long %>%
mutate(variable = recode(variable,
"Watch" = "Watching TV",
"Comp" = "Playing Video Games",
"Comph" = "Using Computers",
"Smart" = "Using Smartphone"),
day = recode(day,
"wk" = "Weekday",
"we" = "Weekend"))
ggplot(screen2, aes(hours)) +
geom_bar() +
facet_grid(day ~ variable)
dat_means <- inner_join(wemwbs, screen2, "Serial") %>%
group_by(variable, day, hours) %>%
summarise(mean_wellbeing = mean(tot_wellbeing))
ggplot(dat_means, aes(hours, mean_wellbeing, linetype = day)) +
geom_line() +
geom_point() +
facet_wrap(~variable, nrow = 2)
smarttot <- screen2 %>%
filter(variable == "Using Smartphone") %>%
group_by(Serial) %>%
summarise(tothours = mean(hours))
smart_wb <- smarttot %>%
filter(tothours > 1) %>%
inner_join(wemwbs, "Serial") %>%
inner_join(pinfo, "Serial") %>%
mutate(thours_c = tothours - mean(tothours))
smart_wb_gen <- smart_wb %>%
group_by(tothours, male) %>%
summarise(mean_wellbeing = mean(wellbeing))
ggplot(smart_wb_gen, aes(tothours, mean_wellbeing, color = male)) +
geom_point() +
geom_smooth()
mod <- lm(wellbeing ~ thours_c * male, smart_wb)
smart_wb
smart_wb <- smarttot %>%
filter(tothours > 1) %>%
inner_join(wemwbs, "Serial") %>%
inner_join(pinfo, "Serial") %>%
mutate(thours_c = tothours - mean(tothours))
smart_wb_gen <- smart_wb %>%
group_by(tothours, male) %>%
summarise(mean_wellbeing = mean(wellbeing))
ggplot(smart_wb_gen, aes(tothours, mean_wellbeing, color = male)) +
geom_point() +
geom_smooth()
mod <- lm(tot_wellbeing ~ thours_c * male, smart_wb)
library("webex")
hide("Hint")
smarttot <- screen2 %>%
filter(variable == "Using Smartphone") %>%
group_by(Serial) %>%
summarise(tothours = mean(hours))
smart_wb <- smarttot %>%
filter(tothours > 1) %>%
inner_join(wemwbs, "Serial") %>%
inner_join(pinfo, "Serial") %>%
mutate(thours_c = tothours - mean(tothours))
smart_wb_gen <- smart_wb %>%
group_by(tothours, male) %>%
summarise(mean_wellbeing = mean(wellbeing))
smart_wb_gen <- smart_wb %>%
group_by(tothours, male) %>%
summarise(mean_wellbeing = mean(tot_wellbeing))
ggplot(smart_wb_gen, aes(tothours, mean_wellbeing, color = male)) +
geom_point() +
geom_smooth()
ggplot(smart_wb_gen, aes(tothours, mean_wellbeing, color = factor(male))) +
geom_point() +
geom_smooth()
ggplot(smart_wb_gen, aes(tothours, mean_wellbeing, color = factor(male))) +
geom_point() +
geom_smooth(method = "lm")
cars
mtcars
glimpse(iris)
summary(mod)
smart_wb_gen <- smart_wb %>%
group_by(tothours, male) %>%
summarise(mean_wellbeing = mean(tot_wellbeing))
ggplot(smart_wb_gen, aes(tothours, mean_wellbeing, color = factor(male))) +
geom_point() +
geom_smooth(method = "lm")
smart_wb <- smarttot %>%
filter(tothours > 1) %>%
inner_join(wemwbs, "Serial") %>%
inner_join(pinfo, "Serial") %>%
mutate(thours_c = tothours - mean(tothours)
male_c = male - mean(male)) # mean-center tothours
smart_wb <- smarttot %>%
filter(tothours > 1) %>%
inner_join(wemwbs, "Serial") %>%
inner_join(pinfo, "Serial") %>%
mutate(thours_c = tothours - mean(tothours),
male_c = male - mean(male)) # mean-center tothours
smart_wb <- smarttot %>%
filter(tothours > 1) %>%
inner_join(wemwbs, "Serial") %>%
inner_join(pinfo, "Serial") %>%
mutate(thours_c = tothours - mean(tothours),
male_c = ifelse(male == 1, .5, -.5))
smart_wb_gen <- smart_wb %>%
group_by(tothours, male) %>%
summarise(mean_wellbeing = mean(tot_wellbeing))
ggplot(smart_wb_gen, aes(tothours, mean_wellbeing, color = factor(male))) +
geom_point() +
geom_smooth(method = "lm")
mod <- lm(tot_wellbeing ~ thours_c * male_c,
smart_wb)
summary(mod)
mod <- lm(tot_wellbeing ~ thours_c * male_c,
smart_wb)
summary(mod)
mod <- lm(tot_wellbeing ~ thours_c * male_c, smart_wb)
summary(mod)
torf(answer = TRUE)
mcq(c("thours_c", "male_c", answer = "thours_c:male_c")).
mcq(c("thours_c", "male_c", answer = "thours_c:male_c"))
coef(mod)["(Intercept)"]
male_intercept <- coef(mod)["(Intercept)"] + coef(mod)["male_c"] * .5
male_slope <- coef(mod)["male_c"] + coef(mod)["thours_c:male_c"] * .5
male_slope <- coef(mod)["thours_c"] + coef(mod)["thours_c:male_c"] * .5
male_slope
coef(mod)["(Intercept)"]
coef(mod)["(Intercept)"]
coef(mod)["male_c"]
coef(mod)["(Intercept)"]
coef(mod)["male_c"]
library("webex")
round2
library("webex")
q()
library("webex")
round2(1.5)
knitr::opts_chunk$set(echo = TRUE)
if (!requireNamespace("webex")) {
stop("You must have the 'webex' package installed to knit HTML from this template.\n   devtools::install_github(\"dalejbarr/webex\")")
} else {
library("webex")
}
round2(coef(mod)["(Intercept)"] + .5 * coef(mod)["male_c"], 2)
knitr::opts_chunk$set(echo = TRUE)
if (!requireNamespace("webex")) {
stop("You must have the 'webex' package installed to knit HTML from this template.\n   devtools::install_github(\"dalejbarr/webex\")")
} else {
library("webex")
}
library("tidyverse")
pinfo <- read_csv("participant_info.csv")
wellbeing <- read_csv("wellbeing.csv")
screen <- read_csv("screen_time.csv")
wemwbs <- wellbeing %>%
gather("var", "score", -Serial) %>%
group_by(Serial) %>%
summarise(tot_wellbeing = sum(score))
wemwbs %>% summarise(mean = mean(tot_wellbeing),
sd = sd(tot_wellbeing),
min = min(tot_wellbeing),
max = max(tot_wellbeing))
ggplot(wemwbs, aes(tot_wellbeing)) + geom_histogram()
screen_long <- screen %>%
gather("var", "hours", -Serial) %>%
separate(var, c("variable", "day"), "_")
screen2 <- screen_long %>%
mutate(variable = recode(variable,
"Watch" = "Watching TV",
"Comp" = "Playing Video Games",
"Comph" = "Using Computers",
"Smart" = "Using Smartphone"),
day = recode(day,
"wk" = "Weekday",
"we" = "Weekend"))
ggplot(screen2, aes(hours)) +
geom_bar() +
facet_grid(day ~ variable)
dat_means <- inner_join(wemwbs, screen2, "Serial") %>%
group_by(variable, day, hours) %>%
summarise(mean_wellbeing = mean(tot_wellbeing))
ggplot(dat_means, aes(hours, mean_wellbeing, linetype = day)) +
geom_line() +
geom_point() +
facet_wrap(~variable, nrow = 2)
smarttot <- screen2 %>%
filter(variable == "Using Smartphone") %>%
group_by(Serial) %>%
summarise(tothours = mean(hours))
smart_wb <- smarttot %>%
filter(tothours > 1) %>%
inner_join(wemwbs, "Serial") %>%
inner_join(pinfo, "Serial")
smart_wb <- smarttot %>%
filter(tothours > 1) %>%
inner_join(wemwbs, "Serial") %>%
inner_join(pinfo, "Serial") %>%
mutate(thours_c = tothours - mean(tothours),
male_c = ifelse(male == 1, .5, -.5))
smart_wb_gen <- smart_wb %>%
group_by(tothours, male) %>%
summarise(mean_wellbeing = mean(tot_wellbeing))
ggplot(smart_wb_gen, aes(tothours, mean_wellbeing, color = factor(male))) +
geom_point() +
geom_smooth(method = "lm")
mod <- lm(tot_wellbeing ~ thours_c * male_c, smart_wb)
summary(mod)
round2(coef(mod)["(Intercept)"] + .5 * coef(mod)["male_c"], 2)
round2(coef(mod)["thours_c"] + .5 * coef(mod)["thours_c:male_c"])
round2(coef(mod)["thours_c"] + .5 * coef(mod)["thours_c:male_c"], 2)
male_intercept <- coef(mod)["(Intercept)"] + coef(mod)["male_c"] * .5
male_intercept <- coef(mod)["(Intercept)"] + coef(mod)["male_c"] * .5
male_intercept
male_slope <- coef(mod)["thours_c"] + coef(mod)["thours_c"] * .5
male_slope <- coef(mod)["thours_c"] + coef(mod)["thours_c:male_c"] * .5
round2(male_slope, 2)
round2(male_intercept, 2)
sprintf("%0.2f", thours_c)
sprintf("%0.2f", -.32)
sub("0\\.", ".", "0.32")
sub("0\\.", ".", "-0.32")
sub("0\\.", ".", -.32)
webex::strip_lzero(c(0.3, -.32))
webex::strip_lzero(c(100.3, -.32))
strip_lzero <- function(x) {sub("$0+\\.", ".", x)}
strip_lzero(c(100.3, -.32))
strip_lzero <- function(x) {sub("^0*\\.", ".", x)}
strip_lzero(c(100.3, -.32))
sub("^0*\\.", ".", "0.32")
sub("^0*\\.", ".", "-0.32")
sub("^[+-]*0*\\.", ".", "-0.32")
sub("^[+-]*0*\\.", ".", "-100.32")
sub("^([+-]*)0\\.", "\\1.", "-100.32")
sub("^([+-]*)0\\.", "\\1.", "-0.32")
sub("^([+-]*)0\\.", "\\1.", "+0.32")
sub("^([+-]*)0\\.", "\\1.", "0.32")
sub("^([+-]*)0\\.", "\\1.", "10.32")
sub("^([+-]*)0\\.", "\\1.", "-10.32")
?webex::fitb
knitr::opts_chunk$set(echo = TRUE)
if (!requireNamespace("webex")) {
stop("You must have the 'webex' package installed to knit HTML from this template.\n   devtools::install_github(\"dalejbarr/webex\")")
} else {
library("webex")
}
fitb(round2(male_intercept), num = TRUE)
knitr::opts_chunk$set(echo = TRUE)
if (!requireNamespace("webex")) {
stop("You must have the 'webex' package installed to knit HTML from this template.\n   devtools::install_github(\"dalejbarr/webex\")")
} else {
library("webex")
}
library("tidyverse")
pinfo <- read_csv("participant_info.csv")
wellbeing <- read_csv("wellbeing.csv")
screen <- read_csv("screen_time.csv")
wemwbs <- wellbeing %>%
gather("var", "score", -Serial) %>%
group_by(Serial) %>%
summarise(tot_wellbeing = sum(score))
wemwbs %>% summarise(mean = mean(tot_wellbeing),
sd = sd(tot_wellbeing),
min = min(tot_wellbeing),
max = max(tot_wellbeing))
ggplot(wemwbs, aes(tot_wellbeing)) + geom_histogram()
screen_long <- screen %>%
gather("var", "hours", -Serial) %>%
separate(var, c("variable", "day"), "_")
screen2 <- screen_long %>%
mutate(variable = recode(variable,
"Watch" = "Watching TV",
"Comp" = "Playing Video Games",
"Comph" = "Using Computers",
"Smart" = "Using Smartphone"),
day = recode(day,
"wk" = "Weekday",
"we" = "Weekend"))
ggplot(screen2, aes(hours)) +
geom_bar() +
facet_grid(day ~ variable)
dat_means <- inner_join(wemwbs, screen2, "Serial") %>%
group_by(variable, day, hours) %>%
summarise(mean_wellbeing = mean(tot_wellbeing))
ggplot(dat_means, aes(hours, mean_wellbeing, linetype = day)) +
geom_line() +
geom_point() +
facet_wrap(~variable, nrow = 2)
smarttot <- screen2 %>%
filter(variable == "Using Smartphone") %>%
group_by(Serial) %>%
summarise(tothours = mean(hours))
smart_wb <- smarttot %>%
filter(tothours > 1) %>%
inner_join(wemwbs, "Serial") %>%
inner_join(pinfo, "Serial")
smart_wb <- smarttot %>%
filter(tothours > 1) %>%
inner_join(wemwbs, "Serial") %>%
inner_join(pinfo, "Serial") %>%
mutate(thours_c = tothours - mean(tothours),
male_c = ifelse(male == 1, .5, -.5))
smart_wb_gen <- smart_wb %>%
group_by(tothours, male) %>%
summarise(mean_wellbeing = mean(tot_wellbeing))
ggplot(smart_wb_gen, aes(tothours, mean_wellbeing, color = factor(male))) +
geom_point() +
geom_smooth(method = "lm")
mod <- lm(tot_wellbeing ~ thours_c * male_c, smart_wb)
summary(mod)
male_intercept <- coef(mod)["(Intercept)"] + coef(mod)["male_c"] * .5
male_slope <- coef(mod)["thours_c"] + coef(mod)["thours_c:male_c"] * .5
fitb(round2(male_intercept), num = TRUE)
fitb(round2(male_intercept, 2), num = TRUE)
fitb(round2(male_slope, 2), num = TRUE)
female_intercept <- coef(mod)["(Intercept)"] + ceof(mod)["male_c"] * -.5
female_intercept <- coef(mod)["(Intercept)"] + coef(mod)["male_c"] * -.5
female_intercept <- coef(mod)["(Intercept)"] + coef(mod)["male_c"] * -.5
female_slope <- coef(mod)["thours_c"] + coef(mod)["thours_c:male_c"] * -.5
fitb(round2(female_intercept, 2), 5, num = TRUE)
fitb(round2(male_intercept, 2), 5, num = TRUE)
fitb(round2(male_slope, 5, 2), num = TRUE)
fitb(round2(male_slope, 2), 5, num = TRUE)
knitr::opts_chunk$set(echo = TRUE)
ggplot(dat, aes(F0, HGS)) +
geom_point() +
geom_smooth(method = "lm")
ggsave("scatterplot.png")
knitr::opts_chunk$set(echo = TRUE)
library("readxl")
library("tidyverse")
dat <- read_excel("final_dataset.xlsx")
n_males <- dat %>%
filter(sex == "male") %>%
nrow()
n_females <- dat %>%
filter(sex == "female") %>%
nrow()
ages <- dat %>%
group_by(sex) %>%
summarise(mean_age = mean(age), sd_age = sd(age))
ggplot(dat, aes(F0, HGS)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(dat, aes(F0, HGS)) +
geom_point() +
geom_smooth(method = "lm")
ggsave("scatterplot.png")
mod1 <- lm(HGS ~ F0, dat)
mod1 <- lm(HGS ~ F0, dat)
mod1
summary(mod1)
summary(NULL)
mod1 <- lm(HGS ~ F0, dat)
summary(mod1)
ggplot(dat, aes(F0, HGS, color = sex)) +
geom_point() +
geom_line() +
geom_smooth()
ggplot(dat, aes(F0, HGS, color = sex)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm")
dat %>%
mutate(F0_C = F0 - mean(F0),
sex_c = ifelse(sex == "female", -.5, .5))
dat %>%
mutate(F0_C = F0 - mean(F0),
sex_c = ifelse(sex == "female", -.5, .5)) %>%
lm(HGS ~ F0_C * sex_c, .)
mod2 <- dat %>%
mutate(F0_C = F0 - mean(F0),
sex_c = ifelse(sex == "female", -.5, .5)) %>%
lm(HGS ~ F0_C * sex_c, .)
summary(mod2)
knitr::opts_chunk$set(echo = TRUE)
female_int <- coef(mod2)["(Intercept)"]
knitr::opts_chunk$set(echo = TRUE)
library("readxl")
library("tidyverse")
dat <- read_excel("final_dataset.xlsx")
n_males <- dat %>%
filter(sex == "male") %>%
nrow()
n_females <- dat %>%
filter(sex == "female") %>%
nrow()
ages <- dat %>%
group_by(sex) %>%
summarise(mean_age = mean(age), sd_age = sd(age))
mod1 <- lm(HGS ~ F0, dat)
summary(mod1)
voice_strength <- TRUE
ggplot(dat, aes(F0, HGS, color = sex)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm")
mod2 <- dat %>%
mutate(F0_C = F0 - mean(F0),
sex_c = ifelse(sex == "female", -.5, .5)) %>%
lm(HGS ~ F0_C * sex_c, .)
summary(mod2)
female_int <- coef(mod2)["(Intercept)"]
female_int <- coef(mod2)["(Intercept)"] + -.5 * coef(mod2)["sex_c"]
female_slp <- coef(mod2)["F0_C"] + -.5 * coef(mod2)["F0_C:sex_c"]
female_int <- coef(mod2)["(Intercept)"] + -.5 * coef(mod2)["sex_c"]
female_slp <- coef(mod2)["F0_C"] + -.5 * coef(mod2)["F0_C:sex_c"]
c(female_int, female_slp)
c(male_int, male_slp)
male_int <- coef(mod2)["(Intercept)"] + .5 * coef(mod2)["sex_c"]
male_slp <- coef(mod2)["F0_C"] + .5 * coef(mod2)["F0_C:sex_c"]
c(male_int, male_slp)
female_int <- coef(mod2)["(Intercept)"] + -.5 * coef(mod2)["sex_c"]
female_slp <- coef(mod2)["F0_C"] + -.5 * coef(mod2)["F0_C:sex_c"]
c(female_int, female_slp)
male_int <- coef(mod2)["(Intercept)"] + .5 * coef(mod2)["sex_c"]
male_slp <- coef(mod2)["F0_C"] + .5 * coef(mod2)["F0_C:sex_c"]
c(male_int, male_slp)
mode2
mod2
male_int <- coef(mod2)["(Intercept)"] + .5 * coef(mod2)["sex_c"]
male_slp <- coef(mod2)["F0_C"] + .5 * coef(mod2)["F0_C:sex_c"]
c(male_int, male_slp)
mod2
library("funfact")
my_design <- list(ivs = c(A = 2, B = 2),
n_item = 8)
popdata <- gen_pop(my_design, 8)
popdata
my_design <- list(ivs = c(A = 2, B = 2), n_item = 1)
my_design
my_design <- list(ivs = c(A = 3), n_item = 1)
my_design
popdata <- gen_pop(my_design, 8)
my_design <- list(ivs = c(A = 3), n_item = 24)
popdata <- gen_pop(my_design, 24)
?gen_pop
popdata
my_data <- sim_norm(my_design, 9, popdata)
my_data
.exit
q()
n
library("funfact")
my_design <- list(ivs = c(A = 3, B = 2), n_item = 24) popdata <- gen_pop(my_design, 24)
my_design <- list(ivs = c(A = 3, B = 2), n_item = 24)
popdata <- gen_pop(my_design, 24)
popdata
q()
n
1000 * log2(1/24)
(1/24) * log2(1/24)
(1/24) * log2(24)
1000 * ((1/24) * log2(24))
1000 * ((1/24) * log2(24))^24
((1/24) * log2(24))^24
((1/24) * log2(24)) * 24
n <- 24L
1/n
log2(n)
log2(24)
log(24, 2)
log2(16)
2^5
q()
n
28.72 + 15.72 + 45.97 + 32.97
q()
n
22/8
## LEAVE THIS BLOCK HERE!
knitr::opts_chunk$set(echo = TRUE)
## NOTE: replace NULL with your answer; do not change the name of the variable!
IQ_cutoff <- z=(X-100)/15
setwd("~/TresoritDrive/priv/PR_stats/root/01_monday/morning_intro_to_R")
# NB: you may need to move the data file into your workspace for this to work!
# You can check your current workspace with getwd(), and change it with setwd()
kp_data<-read_csv("KeiserPruittMod.csv")
list.files()
